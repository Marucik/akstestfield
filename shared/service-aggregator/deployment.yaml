apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-aggregator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-aggregator
  template:
    metadata:
      labels:
        app: service-aggregator
    spec:
      serviceAccountName: service-aggregator-service-account
      automountServiceAccountToken: true
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: service-aggregator
          image: cordicdev.azurecr.io/service-aggregator
          ports:
            - containerPort: 80
              name: http
          resources:
            requests:
              cpu: 1m
              memory: 200Mi
            limits:
              cpu: "1"
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: service-aggregator
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: service-aggregator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-aggregator-cluster-role
rules:
  - apiGroups: [""]
    resources: ["nodes", "services", "pods", "endpoints", "namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount

metadata:
  name: service-aggregator-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding

metadata:
  name: service-aggregator-cluster-role-binding

roleRef:
  kind: ClusterRole
  name: service-aggregator-cluster-role
  apiGroup: rbac.authorization.k8s.io

subjects:
  - kind: ServiceAccount
    name: service-aggregator-service-account
